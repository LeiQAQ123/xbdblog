<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Windows on Arm的那些事儿</title>
    <link href="/2024/11/07/Windows-on-Arm%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <url>/2024/11/07/Windows-on-Arm%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</url>
    
    <content type="html"><![CDATA[<h2 id="对Windows-on-Arm的控诉"><a href="#对Windows-on-Arm的控诉" class="headerlink" title="对Windows on Arm的控诉"></a>对Windows on Arm的控诉</h2><p>自2012年微软首次推出基于ARM架构的Windows RT以来，Windows on ARM的发展始终没有达到预期的大放异彩。尽管近年来微软和高通等公司不断努力推进ARM架构在PC领域的应用，但Windows on ARM依然面临诸多挑战，导致其发展缓慢。</p><p>早期的Windows RT设备因性能不足、应用兼容性差和用户体验不佳而广受诟病。例如，2012年推出的Surface RT搭载NVIDIA Tegra处理器和仅有的32GB存储空间，使得其难以满足用户对性能和存储的基本需求。这给消费者留下了Windows平板电脑“低配低能”的负面印象，阻碍了后续产品的市场表现。</p><p>在软件生态方面，Windows on ARM面临严重的兼容性问题。由于x86架构长期以来一直是Windows平台的主流，大多数软件开发商优先考虑x86架构，而ARM架构的设备常常面临无法运行64位应用的窘境。虽然微软尝试通过模拟器和转译技术解决这个问题，但这些解决方案往往会导致性能下降，影响用户体验。</p><p>尽管近年来ARM架构在能效和计算能力上取得了显著进步，如高通的骁龙8cx Gen 3处理器，已经在性能上媲美甚至超过一些低端x86处理器，但消费者对Windows on ARM设备的固有偏见仍未完全消除。这种心理障碍使得很多用户不愿冒险尝试ARM版Windows设备，特别是在专业和游戏应用场景中。</p><p>随着骁龙X Elite的发布，市场对Windows on Arm的信心又一次提振了起来。因为它的纸面参数真的很强，尤其是高通的自研大核，可以说是吊打M1系列芯片。结果上市之后微软和高通又给我们拉了一坨大的。首发的笔记本没有一个5000RMB的，而且软件的兼容性似乎又出现了问题，Windows on Arm没有几个软件支持原生ARM架构的。而且转译效率极差，总体性能还不如M1呢。</p><p>那能耗呢？能耗比确实优秀，结果英特尔的“月亮湖”一出，直接被吊打，可以说是相当惨败了。</p><h2 id="为何发展成这样"><a href="#为何发展成这样" class="headerlink" title="为何发展成这样"></a>为何发展成这样</h2><p>可以说Windows on Arm能发展到今天这步田地，微软可以说首锅，主要是微软最近几年的战略往往是一个极端跳到另外一个极端。芯片只采用一家的，从英伟达到高通，一条路走到黑，拦都拦不住的那种。对于这方面，微软本身就有一手好牌，完完全全可以放开Windows on Arm的准入门槛，事实上也完全可以放开刷机的方式提升Windows on Arm的设备使用数，也不至于现在刷Windows on Arm成为小众圈子</p><p>还有就是微软沉重的历史包袱，为了向下兼容，不断累加屎山代码,再加上开发者对Windows on Arm的软件开发也不上心，就导致Windows牢牢地和X86绑在了一起，成为其在操作系统的不可逾越的护城河，也是Windows on Arm仍然是一潭死水的原因。</p><p>文章到此就结束了，感谢你的阅读。</p>]]></content>
    
    
    <categories>
      
      <category>科技</category>
      
      <category>科技杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows on Arm, 操作系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何低成本搭建个人博客</title>
    <link href="/2024/11/06/%E5%A6%82%E4%BD%95%E4%BD%8E%E6%88%90%E6%9C%AC%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/11/06/%E5%A6%82%E4%BD%95%E4%BD%8E%E6%88%90%E6%9C%AC%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h2><p>1.一个github账号；<br>2.一个gitee账号（可选）；<br>3.一个域名（可选，不过大部分域名都要购买获取，免费申请到域名很麻烦）；<br>4.一台个人电脑并准备科学的上网环境。</p><h2 id="2-如何做"><a href="#2-如何做" class="headerlink" title="2.如何做"></a>2.如何做</h2><p>1.打开电脑，在浏览器输入如下网址:</p><blockquote><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p></blockquote><p>2.跟着官方文档安装相关前置软件（需要科学环境）；<br>3.在github上创建一个仓库（名称随意），并用2中所下载的git下载到本地并同步，具体步骤请自行百度（需要科学环境）；<br>4.打开本地仓库的文件夹右键，点击”Open Git Bash here“，并在新出现的页面中敲击如下4个命令：</p><blockquote><p>hexo init<br>hexo install<br>hexo g<br>hexo s</p></blockquote><p>5.生成完成后，预览。完成后，按下”ctrl+C“即可关闭博客；<br>6.将本地文件用git上传到gitHub（需要科学环境）；<br>7.浏览器打开vercel，跟着官方操作将github的项目部署到vercel（需要科学环境）；<br>至此，你的个人博客搭建完毕，以下是附加功能。</p><h2 id="3-附加功能"><a href="#3-附加功能" class="headerlink" title="3.附加功能"></a>3.附加功能</h2><p>1.自定义域名（vercel添加自动域名请自行百度）；<br>2.用gitee同步，去除科学环境（具体操作请自行百度）；<br>3.博客自定义主题，请参考hexo的官方文档<br>如果相对这方面进行咨询，请致电我的邮件<a href="mailto:&#x78;&#98;&#100;&#x40;&#x78;&#x69;&#97;&#111;&#98;&#x75;&#x64;&#x69;&#x61;&#x6e;&#x2e;&#x65;&#x75;&#x2e;&#111;&#114;&#103;">&#x78;&#98;&#100;&#x40;&#x78;&#x69;&#97;&#111;&#98;&#x75;&#x64;&#x69;&#x61;&#x6e;&#x2e;&#x65;&#x75;&#x2e;&#111;&#114;&#103;</a></p>]]></content>
    
    
    <categories>
      
      <category>科技</category>
      
      <category>轻松教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>blog</tag>
      
      <tag>个人博客</tag>
      
      <tag>网站搭建</tag>
      
      <tag>github的妙用</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
